from aiogram import Bot, Router, F
from aiogram.filters import Command, StateFilter, MagicData
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from typing import Type

from keyboards import attendance_status_select as ass
from keyboards import main_menu

router = Router()
router.message.filter(MagicData(F.user))


class UserStatus(StatesGroup):
	sets_status = State()


@router.message(F.text == "üöó –í—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è")
async def attendance_command_handler(message: Message, state: FSMContext, user: Type) -> None:
	await message.answer(f'–í–∞—à —Å—Ç–∞—Ç—É—Å - "{ass.ANSWER_OPTIONS[int(user.status)]}".\n–í–∏–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—É—Å:', reply_markup=ass.keyboard)
	await state.set_state(UserStatus.sets_status)


@router.message(UserStatus.sets_status)
async def status_selected(message: Message, state: FSMContext, user: Type) -> None:
	if message.text not in ass.ANSWER_OPTIONS:
		await message.answer("–ù–µ–≤—ñ—Ä–Ω–∏–π —Å—Ç–∞—Ç—É—Å", reply_markup=ass.keyboard)
		return

	user.status = ass.ANSWER_OPTIONS.index(message.text)
	user.save()

	await message.answer(f'–£—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–∞ "{message.text}"', reply_markup=main_menu(user))
